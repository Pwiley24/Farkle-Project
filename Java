/*
 *This project creates a farkle game app that allows users to roll 6 dice and choose some
 * to increase their score.
 * Author: Paige Wiley
 * Date: 3-11-2022
 */
package com.example.farkleproject;

import static android.graphics.Color.argb;
import static android.graphics.Color.rgb;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.DialogInterface;
import android.graphics.Color;
import android.graphics.ColorFilter;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    ImageButton[][] imageButtons = new ImageButton[2][3]; //[row][col]
    int[][] diceNumber = new int[2][3];
    Button roll;
    Button score;
    Button stop;
    int currentScore;
    int totalScore = 0;
    int roundNum = 1;
    TextView currentScoreText;
    TextView totalScoreText;
    TextView roundText;
    final Context context = this;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //set the text views to manipulate later
        currentScoreText = (TextView)this.findViewById(R.id.currentScore);
        totalScoreText = (TextView)this.findViewById(R.id.totalScore);
        roundText = (TextView)this.findViewById(R.id.roundNum);

        imageButtons[0][0] = (ImageButton)this.findViewById(R.id.imageButton1);
        imageButtons[0][0].setOnClickListener(this);
        diceNumber[0][0] = 1;
        imageButtons[0][1] = (ImageButton)this.findViewById(R.id.imageButton2);
        imageButtons[0][1].setOnClickListener(this);
        diceNumber[0][1] = 2;
        imageButtons[0][2] = (ImageButton)this.findViewById(R.id.imageButton3);
        imageButtons[0][2].setOnClickListener(this);
        diceNumber[0][2] = 3;
        imageButtons[1][0] = (ImageButton)this.findViewById(R.id.imageButton4);
        imageButtons[1][0].setOnClickListener(this);
        diceNumber[1][0] = 4;
        imageButtons[1][1] = (ImageButton)this.findViewById(R.id.imageButton5);
        imageButtons[1][1].setOnClickListener(this);
        diceNumber[1][1] = 5;
        imageButtons[1][2] = (ImageButton)this.findViewById(R.id.imageButton6);
        imageButtons[1][2].setOnClickListener(this);
        diceNumber[1][2] = 6;


        roll = (Button)this.findViewById(R.id.roll_button);
        roll.setOnClickListener(this);
        score = (Button)this.findViewById(R.id.score_button);
       score.setOnClickListener(this);
       score.setEnabled(false);
        stop = (Button)this.findViewById(R.id.stop_button);
        stop.setOnClickListener(this);
    }


    public void onClick(View view){ //when a button is clicked

        int imgBtn_id = view.getId();

        //use this area to determine the scoring totals
        if(imgBtn_id == R.id.imageButton1 ||
                imgBtn_id == R.id.imageButton2 ||
                imgBtn_id == R.id.imageButton3 ||
                imgBtn_id == R.id.imageButton4 ||
                imgBtn_id == R.id.imageButton5 ||
                imgBtn_id == R.id.imageButton6) { // id's of dice image 1, 2, 3, 4, 5, 6

            ImageButton imgBtn = (ImageButton) view;

            /*
             * I used code from Stack Overflow
             * URL: https://stackoverflow.com/questions/20121938/how-to-set-tint-for-an-image-view-programmatically-in-android
             * I used this code to make the background of my dice semi-transparent when clicked on.
             */
            imgBtn.setColorFilter(argb(150, 255, 255, 255));
            imgBtn.setEnabled(false);

        }else { //if one of the bottom command buttons are pressed
            Button b = (Button) view;
            if (b.isEnabled()) {
                if (b.getText().equals("Roll")) { //when the roll button is clicked
                    rollDice();
                    checkPlay();
                    score.setEnabled(true);
                    roll.setEnabled(false);
                } else if (b.getText().equals("Score")) { //when the score button is clicked
                    //print total score to app
                    scorePoints();
                    score.setEnabled(false);
                    roll.setEnabled(true);
                    currentScoreText.setText("Current Score: " + currentScore);
                } else if (b.getText().equals("Stop")) { //when the stop button is clicked
                    //print out your latest score
                    totalScoreText.setText("Total Score: " + totalScore);
                    roundNum++;
                    roundText.setText("Round " + roundNum);
                    resetDice();
                    roll.setEnabled(true);
                    score.setEnabled(false);
                }
            }
        }
    }

    //resets the game for the next round
    public void resetDice(){
        //enabled the roll button
        roll.setEnabled(true);
        //enable all dice:
        for(int x = 0; x < 3; x++){
            for(int y = 0; y < 2; y++){
                //set color to nothing
                imageButtons[y][x].setEnabled(true);
                imageButtons[y][x].setColorFilter(argb(0,255,255,255));
            }
        }
        currentScore = 0;
        currentScoreText.setText("Current Score: " + currentScore);

        //reset the dice images:
        imageButtons[0][0].setImageResource(R.drawable.dice1);
        diceNumber[0][0] = 1;
        imageButtons[0][1].setImageResource(R.drawable.dice2);
        diceNumber[0][1] = 2;
        imageButtons[0][2].setImageResource(R.drawable.dice3);
        diceNumber[0][2] = 3;
        imageButtons[1][0].setImageResource(R.drawable.dice4);
        diceNumber[1][0] = 4;
        imageButtons[1][1].setImageResource(R.drawable.dice5);
        diceNumber[1][1] = 5;
        imageButtons[1][2].setImageResource(R.drawable.dice6);
        diceNumber[1][2] = 6;
    }

    //determine your new score based on your selected dice.
    public void scorePoints(){
        int ones = 0;
        int twos = 0;
        int threes = 0;
        int fours = 0;
        int fives = 0;
        int sixes = 0;
        int newScore = 0;

        for(int x = 0; x < 3; x++){
            for(int y = 0; y < 2; y++){
                if(!imageButtons[y][x].isEnabled()){ //if the dice has been clicked on, score it
                    if (diceNumber[y][x] == 1){ //if the dice value is one
                        ones++;
                        diceNumber[y][x] = 0;
                    }if (diceNumber[y][x] == 2){ //if the dice value is two
                        twos++;
                        diceNumber[y][x] = 0;
                    }if (diceNumber[y][x] == 3){ //if the dice value is three
                        threes++;
                        diceNumber[y][x] = 0;
                    }if (diceNumber[y][x] == 4){ //if the dice value is four
                        fours++;
                        diceNumber[y][x] = 0;
                    }if (diceNumber[y][x] == 5){ //if the dice value is five
                        fives++;
                        diceNumber[y][x] = 0;
                    }if (diceNumber[y][x] == 6){ //if the dice value is six
                        sixes++;
                        diceNumber[y][x] = 0;
                    }
                }
            }
        }

        //number of 1's
        if(ones == 1){
            newScore += 100;
        }else if(ones == 2){
            newScore += 200;
        }else if(ones == 3){
            newScore += 1000;
        }else if(ones >= 4){
            newScore += 1000 + 1000 * (ones - 3);
        }

        //number of 2's
        if(twos == 1){
            newScore += 0;
        }else if(twos == 2){
            newScore += 0;
        }else if(twos == 3){
            newScore += 200;
        }else if(twos >= 4){
            newScore += 200 + 200 * (twos - 3);
        }

        //number of 3's'
        if(threes == 1){
            newScore += 0;
        }else if(threes == 2){
            newScore += 0;
        }else if(threes == 3){
            newScore += 300;
        }else if(threes >= 4){
            newScore += 300 + 300 * (threes - 3);
        }

        //number of 4's
        if(fours == 1){
            newScore += 0;
        }else if(fours == 2){
            newScore += 0;
        }else if(fours == 3){
            newScore += 400;
        }else if(fours >= 4){
            newScore += 400 + 400 * (fours - 3);
        }

        //number of 5's
        if(fives == 1){
            newScore += 50;
        }else if(fives == 2){
            newScore += 100;
        }else if(fives == 3){
            newScore += 500;
        }else if(fives >= 4){
            newScore += 500 + 500 * (fives - 3);
        }

        //number of 6's
        if(sixes == 1){
            newScore += 0;
        }else if(sixes == 2){
            newScore += 0;
        }else if(sixes == 3){
            newScore += 600;
        }else if(sixes >= 4){
            newScore += 600 + 600 * (sixes - 3);
        }

        totalScore += newScore;
        currentScore += newScore;
    }

    //checks that you can score with your roll
    public void checkPlay(){
        int one = 0;
        int two = 0;
        int three = 0;
        int four = 0;
        int five = 0;
        int six = 0;

        for(int x = 0; x < 3; x++){
            for(int y = 0; y < 2; y++){
                if(imageButtons[y][x].isEnabled()){ //if the dice hasn't been clicked on
                    if (diceNumber[y][x] == 1){ //if the dice value is one
                        one++;
                    }if (diceNumber[y][x] == 2){ //if the dice value is two
                        two++;
                    }if (diceNumber[y][x] == 3){ //if the dice value is three
                        three++;
                    }if (diceNumber[y][x] == 4){ //if the dice value is four
                        four++;
                    }if (diceNumber[y][x] == 5){ //if the dice value is five
                        five++;
                    }if (diceNumber[y][x] == 6){ //if the dice value is six
                        six++;
                    }
                }
            }
        }
        if (one < 1 && five < 1 && two < 3 && three < 3 && four < 3 && six < 3){
            //send a message if they want to forfeit

            /*
             * I used code from Mkyong.com.
             * URL: https://mkyong.com/android/android-alert-dialog-example/
             * I used this code to send an alert to the users if the dice they rolled can't score.
             */
            AlertDialog.Builder alertForForfeit = new AlertDialog.Builder(context);
            alertForForfeit.setMessage("Looks like you can't make any more moves. Would you like to forfeit your points and start a new round?");
            alertForForfeit.setCancelable(false);
            alertForForfeit.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                    //if yes is clicked, close current
                    totalScore -= currentScore;
                    score.setEnabled(false);
                    roll.setEnabled(false);
                    Toast.makeText(context, "To continue press 'STOP'", Toast.LENGTH_LONG).show();
                }
            });
            /*alertForForfeit.setNegativeButton("No",new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int id) {
                    //if no is clicked, do nothing
                    dialog.cancel();
                }
            });*/

            //create alert dialog
            AlertDialog alertDialog = alertForForfeit.create();

            //show the alert
            alertDialog.show();
        }

    }


    public void rollDice (){
        int diceNum;
        for(int x = 0; x < 3; x++) {
            for (int y = 0; y < 2; y++) {
                if(imageButtons[y][x].isEnabled()) {
                    for (int i = 0; i < 6; i++) {
                        diceNum = (int) (Math.random() * 6) + 1;
                        if (diceNum == 1) {
                            /*
                             * I used stack overflow to write this line of code
                             * URL: https://stackoverflow.com/questions/19535571/how-to-change-imageview-source-in-android
                             * I used this code to change the image of my dice buttons.
                             */
                            imageButtons[y][x].setImageResource(R.drawable.dice1);
                            diceNumber[y][x] = 1;
                        } else if (diceNum == 2) {
                            imageButtons[y][x].setImageResource(R.drawable.dice2);
                            diceNumber[y][x] = 2;
                        } else if (diceNum == 3) {
                            imageButtons[y][x].setImageResource(R.drawable.dice3);
                            diceNumber[y][x] = 3;
                        } else if (diceNum == 4) {
                            imageButtons[y][x].setImageResource(R.drawable.dice4);
                            diceNumber[y][x] = 4;
                        } else if (diceNum == 5) {
                            imageButtons[y][x].setImageResource(R.drawable.dice5);
                            diceNumber[y][x] = 5;
                        } else if (diceNum == 6) {
                            imageButtons[y][x].setImageResource(R.drawable.dice6);
                            diceNumber[y][x] = 6;
                        }
                    }
                }
            }
        }
    }
}
